name: Chile News Mailer

# Manual y schedule NO comparten cola: no se bloquean entre sí
concurrency:
  group: news-mailer-${{ github.event_name }}
  cancel-in-progress: false

on:
  schedule:
    - cron: '*/5 * * * *'     # despierta cada 5 minutos (UTC)
  workflow_dispatch: {}

jobs:
  mailer:
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Gate por hora Chile con ventana ±30 min (07:30 y 17:30 CL)
      - name: Gate by Chile time (±30 min)
        id: gate
        shell: bash
        run: |
          echo "Event: $GITHUB_EVENT_NAME"
          NOW_S=$(TZ=America/Santiago date +%s)
          TODAY=$(TZ=America/Santiago date +%Y-%m-%d)
          HOUR=$(TZ=America/Santiago date +%H)

          T_MORN=$(TZ=America/Santiago date -d "$TODAY 07:30:00" +%s)
          T_AFTER=$(TZ=America/Santiago date -d "$TODAY 17:30:00" +%s)

          EARLY=1800   # 30 min * 60
          LATE=1800    # 30 min * 60

          in_window () {
            local now=$1; local target=$2; local early=$3; local late=$4
            [ $now -ge $((target - early)) ] && [ $now -le $((target + late)) ]
          }

          RUN="no"
          WINDOW_TAG="none"
          if in_window "$NOW_S" "$T_MORN" "$EARLY" "$LATE"; then
            RUN="yes"; WINDOW_TAG="am"
          elif in_window "$NOW_S" "$T_AFTER" "$EARLY" "$LATE"; then
            RUN="yes"; WINDOW_TAG="pm"
          fi

          # Manual SIEMPRE corre (ignora ventana), pero sin afectar el lock
          if [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ]; then
            RUN="yes"
            if [ "$WINDOW_TAG" = "none" ]; then
              if [ "$HOUR" -lt 12 ]; then WINDOW_TAG="am"; else WINDOW_TAG="pm"; fi
            fi
          fi

          WINDOW_KEY="$(TZ=America/Santiago date +%Y-%m-%d)-${WINDOW_TAG}"
          echo "Chile time now: $(TZ=America/Santiago date +%H:%M:%S)"
          echo "run=$RUN" >> "$GITHUB_OUTPUT"
          echo "window_key=$WINDOW_KEY" >> "$GITHUB_OUTPUT"

      # LOCK SOLO para runs programados (schedule)
      - name: Acquire window lock
        if: ${{ steps.gate.outputs.run == 'yes' && github.event_name == 'schedule' }}
        id: lock
        uses: actions/cache@v4
        with:
          path: .window-lock
          key: news-mailer-${{ steps.gate.outputs.window_key }}

      - uses: actions/setup-python@v5
        if: ${{ steps.gate.outputs.run == 'yes' && (github.event_name == 'workflow_dispatch' || steps.lock.outputs.cache-hit != 'true') }}
        with:
          python-version: '3.11'

      - name: Install deps
        if: ${{ steps.gate.outputs.run == 'yes' && (github.event_name == 'workflow_dispatch' || steps.lock.outputs.cache-hit != 'true') }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt, installing minimal deps"
            pip install --no-cache-dir eventregistry openai
          fi

      - name: Run script
        if: ${{ steps.gate.outputs.run == 'yes' && (github.event_name == 'workflow_dispatch' || steps.lock.outputs.cache-hit != 'true') }}
        env:
          ER_API_KEY:     ${{ secrets.ER_API_KEY }}
          REMITENTE:      ${{ secrets.REMITENTE }}
          DESTINATARIO:   ${{ secrets.DESTINATARIO }}
          DESTINATARIO2:  ${{ secrets.DESTINATARIO2 }}
          APP_PASSWORD:   ${{ secrets.APP_PASSWORD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          mkdir -p .window-lock
          python solo_apis.py

      # Aviso de salto por lock: SOLO aplica a schedule
      - name: Skipped (already sent this window)
        if: ${{ steps.gate.outputs.run == 'yes' && github.event_name == 'schedule' && steps.lock.outputs.cache-hit == 'true' }}
        run: echo "Ya se envió en esta ventana (${{ steps.gate.outputs.window_key }})."

      - name: Skipped (outside windows)
        if: ${{ steps.gate.outputs.run != 'yes' }}
        run: echo "Fuera de la ventana; no se ejecuta el script."
