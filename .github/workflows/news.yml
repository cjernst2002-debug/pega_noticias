name: Chile News Mailer

concurrency:
  group: news-mailer
  cancel-in-progress: false   # no cancela si entran dos ticks en la misma ventana

on:
  schedule:
    - cron: '*/5 * * * *'     # despierta cada 5 minutos (UTC)
  workflow_dispatch: {}

jobs:
  mailer:
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Gate por hora Chile con ventana ±7 minutos (08:00 y 14:30)
      - name: Gate by Chile time (±7 min)
        id: gate
        shell: bash
        run: |
          echo "Event: $GITHUB_EVENT_NAME"
          NOW_S=$(TZ=America/Santiago date +%s)
          TODAY=$(TZ=America/Santiago date +%Y-%m-%d)

          T_MORN=$(TZ=America/Santiago date -d "$TODAY 08:00:00" +%s)
          T_AFTER=$(TZ=America/Santiago date -d "$TODAY 14:30:00" +%s)

          WIN=420  # ±7 minutos (en segundos)

          in_window () {
            local now=$1; local target=$2; local win=$3
            [ $now -ge $((target - win)) ] && [ $now -le $((target + win)) ]
          }

          RUN="no"
          if [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ] \
             || in_window "$NOW_S" "$T_MORN" "$WIN" \
             || in_window "$NOW_S" "$T_AFTER" "$WIN"; then
            RUN="yes"
          fi

          echo "Chile time now: $(TZ=America/Santiago date +%H:%M:%S)"
          echo "run=$RUN" >> "$GITHUB_OUTPUT"

      - uses: actions/setup-python@v5
        if: ${{ steps.gate.outputs.run == 'yes' }}
        with:
          python-version: '3.11'

      - name: Install deps
        if: ${{ steps.gate.outputs.run == 'yes' }}
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt, installing minimal deps"
            pip install --no-cache-dir eventregistry openai
          fi

      - name: Run script
        if: ${{ steps.gate.outputs.run == 'yes' }}
        env:
          ER_API_KEY:     ${{ secrets.ER_API_KEY }}
          REMITENTE:      ${{ secrets.REMITENTE }}
          DESTINATARIO:   ${{ secrets.DESTINATARIO }}
          APP_PASSWORD:   ${{ secrets.APP_PASSWORD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python solo_apis.py

      - name: Skipped (outside 08:00±7m / 14:30±7m)
        if: ${{ steps.gate.outputs.run != 'yes' }}
        run: echo "Fuera de la ventana; no se ejecuta el script."
