name: Chile News Mailer

concurrency:
  group: news-mailer
  cancel-in-progress: false

permissions:
  contents: read
  actions: write

on:
  schedule:
    - cron: '*/5 * * * *'
  workflow_dispatch: {}

jobs:
  mailer:
    if: ${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Gate by Chile time (+/-35)
        id: gate
        shell: bash
        run: |
          NOW_S=$(TZ=America/Santiago date +%s)
          TODAY=$(TZ=America/Santiago date +%Y-%m-%d)
          T_MORN=$(TZ=America/Santiago date -d "$TODAY 07:30:00" +%s)
          T_AFTER=$(TZ=America/Santiago date -d "$TODAY 17:30:00" +%s)
          PAD=2100
          in_window () { [ $1 -ge $(( $2 - PAD )) ] && [ $1 -le $(( $2 + PAD )) ]; }
          RUN=no
          SLOT=none
          if [ "$GITHUB_EVENT_NAME" = "workflow_dispatch" ]; then
            RUN=yes
            SLOT=manual
          else
            if in_window "$NOW_S" "$T_MORN"; then RUN=yes; SLOT=morn; fi
            if in_window "$NOW_S" "$T_AFTER"; then RUN=yes; SLOT=eve; fi
          fi
          DATE_CL=$(TZ=America/Santiago date +%Y-%m-%d)
          echo "slot_key=${DATE_CL}-${SLOT}" >> "$GITHUB_OUTPUT"
          echo "run=$RUN" >> "$GITHUB_OUTPUT"

      - name: Lock restore
        if: ${{ steps.gate.outputs.run == 'yes' && github.event_name == 'schedule' }}
        uses: actions/cache/restore@v4
        with:
          path: .news-lock
          key: "news-mailer-${{ steps.gate.outputs.slot_key }}"

      - name: Check lock
        if: ${{ steps.gate.outputs.run == 'yes' }}
        id: check
        shell: bash
        run: |
          if [ -f .news-lock/lock.txt ]; then
            echo "LOCKED=true" >> "$GITHUB_ENV"
          else
            echo "LOCKED=false" >> "$GITHUB_ENV"
          fi
          echo "locked=${LOCKED:-false}" >> "$GITHUB_OUTPUT"

      - name: Decide flags
        if: ${{ steps.gate.outputs.run == 'yes' }}
        id: flags
        shell: bash
        run: |
          RUN_PY=no
          if [ "${{ github.event_name }}" = "workflow_dispatch" ] || [ "${LOCKED}" != "true" ]; then
            RUN_PY=yes
          fi
          echo "run_py=$RUN_PY" >> "$GITHUB_OUTPUT"

      - name: Prepare lock file
        if: ${{ github.event_name == 'schedule' && steps.flags.outputs.run_py == 'yes' && steps.check.outputs.locked != 'true' }}
        shell: bash
        run: |
          mkdir -p .news-lock
          echo "lock for ${{ steps.gate.outputs.slot_key }}" > .news-lock/lock.txt

      - name: Lock save
        if: ${{ github.event_name == 'schedule' && steps.flags.outputs.run_py == 'yes' && steps.check.outputs.locked != 'true' }}
        uses: actions/cache/save@v4
        with:
          path: .news-lock
          key: "news-mailer-${{ steps.gate.outputs.slot_key }}"

      - uses: actions/setup-python@v5
        if: ${{ steps.flags.outputs.run_py == 'yes' }}
        with:
          python-version: '3.11'

      - name: Install deps
        if: ${{ steps.flags.outputs.run_py == 'yes' }}
        shell: bash
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt, installing minimal deps"
            pip install --no-cache-dir eventregistry openai
          fi

      - name: Run script
        if: ${{ steps.flags.outputs.run_py == 'yes' }}
        shell: bash
        run: |
          export ER_API_KEY="${{ secrets.ER_API_KEY }}"
          export REMITENTE="${{ secrets.REMITENTE }}"
          export DESTINATARIO="${{ secrets.DESTINATARIO }}"
          export DESTINATARIO2="${{ secrets.DESTINATARIO2 }}"
          export APP_PASSWORD="${{ secrets.APP_PASSWORD }}"
          export OPENAI_API_KEY="${{ secrets.OPENAI_API_KEY }}"
          python solo_apis.py

      - name: Skipped (already sent this window)
        if: ${{ steps.gate.outputs.run == 'yes' && github.event_name == 'schedule' && steps.flags.outputs.run_py != 'yes' }}
        run: echo "Lock activo: ${{ steps.gate.outputs.slot_key }}"

      - name: Skipped (outside window)
        if: ${{ steps.gate.outputs.run != 'yes' }}
        run: echo "Fuera de la ventana"
