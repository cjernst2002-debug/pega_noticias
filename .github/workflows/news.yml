name: Chile News Mailer

permissions:
  actions: write
  contents: read

concurrency:
  group: news-mailer
  cancel-in-progress: false

"on":
  schedule:
    - cron: "*/5 * * * *"  # despierta cada 5 minutos (UTC)
  workflow_dispatch: {}

jobs:
  mailer:
    if: "${{ github.event_name == 'schedule' || github.event_name == 'workflow_dispatch' }}"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Gate: 08:00 y 18:00 CL con ventana de 35 min
      - name: Gate by Chile time (+/- 35 min)
        id: gate
        shell: bash
        run: |
          set -euo pipefail
          NOW_S=$(TZ=America/Santiago date +%s)
          TODAY=$(TZ=America/Santiago date +%Y-%m-%d)
          HNOW=$(TZ=America/Santiago date +%H:%M:%S)

          T_MORN=$(TZ=America/Santiago date -d "$TODAY 08:00:00" +%s)
          T_EVEN=$(TZ=America/Santiago date -d "$TODAY 18:00:00" +%s)
          WIN=$((35*60))

          in_window(){ [ "$1" -ge $(( $2 - WIN )) ] && [ "$1" -le $(( $2 + WIN )) ]; }

          RUN=no; WINDOW=""
          if [ "${GITHUB_EVENT_NAME}" = "workflow_dispatch" ]; then
            RUN=yes; WINDOW=manual
          elif in_window "$NOW_S" "$T_MORN"; then
            RUN=yes; WINDOW=morning
          elif in_window "$NOW_S" "$T_EVEN"; then
            RUN=yes; WINDOW=evening
          fi

          echo "Chile time now: $HNOW"
          echo "run=$RUN"       >> "$GITHUB_OUTPUT"
          echo "window=$WINDOW" >> "$GITHUB_OUTPUT"
          echo "date=$TODAY"    >> "$GITHUB_OUTPUT"

      # Restore lock (solo si no es manual)
      - name: Restore lock
        id: lock
        if: "${{ steps.gate.outputs.run == 'yes' && steps.gate.outputs.window != 'manual' }}"
        uses: actions/cache/restore@v4
        with:
          path: .cache-lock/${{ steps.gate.outputs.window }}
          key: mailer-lock-${{ steps.gate.outputs.window }}-${{ steps.gate.outputs.date }}

      # Python env solo si corresponde correr
      - uses: actions/setup-python@v5
        if: "${{ steps.gate.outputs.run == 'yes' && (steps.gate.outputs.window == 'manual' || steps.lock.outputs['cache-hit'] != 'true') }}"
        with:
          python-version: "3.11"

      - name: Install deps
        if: "${{ steps.gate.outputs.run == 'yes' && (steps.gate.outputs.window == 'manual' || steps.lock.outputs['cache-hit'] != 'true') }}"
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          else
            echo "No requirements.txt, installing minimal deps"
            pip install --no-cache-dir eventregistry openai
          fi

      - name: Run script
        if: "${{ steps.gate.outputs.run == 'yes' && (steps.gate.outputs.window == 'manual' || steps.lock.outputs['cache-hit'] != 'true') }}"
        env:
          ER_API_KEY:     ${{ secrets.ER_API_KEY }}
          REMITENTE:      ${{ secrets.REMITENTE }}
          DESTINATARIO:   ${{ secrets.DESTINATARIO }}
          DESTINATARIO2:  ${{ secrets.DESTINATARIO2 }}
          APP_PASSWORD:   ${{ secrets.APP_PASSWORD }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: python solo_apis.py

      # Asegura carpeta del lock y guarda (solo programado, no manual)
      - name: Ensure lock dir exists
        if: "${{ steps.gate.outputs.run == 'yes' && steps.gate.outputs.window != 'manual' && steps.lock.outputs['cache-hit'] != 'true' }}"
        run: |
          mkdir -p ".cache-lock/${{ steps.gate.outputs.window }}"
          echo "locked on $(date -u)" > ".cache-lock/${{ steps.gate.outputs.window }}/stamp.txt"

      - name: Save lock
        if: "${{ steps.gate.outputs.run == 'yes' && steps.gate.outputs.window != 'manual' && steps.lock.outputs['cache-hit'] != 'true' }}"
        uses: actions/cache/save@v4
        with:
          path: .cache-lock/${{ steps.gate.outputs.window }}
          key: mailer-lock-${{ steps.gate.outputs.window }}-${{ steps.gate.outputs.date }}

      - name: Skipped (outside window or locked)
        if: "${{ !(steps.gate.outputs.run == 'yes' && (steps.gate.outputs.window == 'manual' || steps.lock.outputs['cache-hit'] != 'true')) }}"
        run: echo "Saltado: fuera de 08:00/18:00 +/-35 min o ya hubo un envío en esta ventana."

      - name: Skipped (outside window or locked)
        if: ${{ !(steps.gate.outputs.run == 'yes' && (steps.gate.outputs.window == 'manual' || steps.lock.outputs.cache-hit != 'true')) }}
        run: echo "Saltado: fuera de 08:00/18:00 ±35 min o ya hubo un envío en esta ventana."
